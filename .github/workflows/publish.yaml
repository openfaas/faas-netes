name: publish

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read
      checks: write
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read
    steps:
      - uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Get TAG
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - name: Get Repo Owner
        id: get_repo_owner
        run: echo ::set-output name=repo_owner::$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
      - name: Get git commit
        id: get_git_commit
        run: echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - name: Get version
        id: get_version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV

      - name: Push containers
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          outputs: "type=registry,push=true"
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          build-args: |
            GIT_COMMIT=${{env.GIT_COMMIT}}
            VERSION=${{env.VERSION}}
          tags: |
            ghcr.io/${{ steps.get_repo_owner.outputs.repo_owner }}/faas-netes:${{ github.sha }}
            ghcr.io/${{ steps.get_repo_owner.outputs.repo_owner }}/faas-netes:${{ steps.get_tag.outputs.TAG }}
            ghcr.io/${{ steps.get_repo_owner.outputs.repo_owner }}/faas-netes:latest
