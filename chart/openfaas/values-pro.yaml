faasnetesPro:
  image: ttl.sh/alexellis2/faas-netes:0.1.3-60-gb7f9119f-dirty

gatewayPro:
  image: ttl.sh/alexellis/gateway:0.2.13-12-gff1ddbbc

oidcAuthPlugin:
  enabled: true
  audience: https://alexellis.eu.auth0.com/api/v2/
  image: ttl.sh/alexellis/openfaas-oidc-plugin:0.5.5-3-g43c3552-dirty

iam:
  # The primary issuer represents how users log into the OpenFaaS dashboard and via the CLI
  primaryIssuer: "https://alexellis.eu.auth0.com/"

  # systemIssuer represents the issuer for the OpenFaaS system components
  systemIssuer: "https://gw.exit.o6s.io"


gateway:
  replicas: 1
  # authProxyUrl: "https://auth.exit.o6s.io"

# ====================================================================================================


# Initial configuration to set Pro configurations on
openfaasPro: true

# Recommended operating mode for the OpenFaaS controller aka "faas-netes"
# is operator mode, including a CustomResource for functions.
#
# The operator mode is required for GitOps tooling like ArgoCD / Flux v2
# and to export existing functions for backup purposes. 
operator:
  create: false

# Enable authentication on all OpenFaaS core components.
# You must not turn off basic_auth for the chart, however, you can pre-create the 
# secret, if you're using a GitOps tool to create a stable secret
# before installing OpenFaaS Pro via this chart
generateBasicAuth: true

# Follow docs at: https://docs.openfaas.com/openfaas-pro/dashboard/
# for setting up the new dashboard
dashboard:
  publicURL: localhost
  enabled: false
  clientID: ""
  oauthClientSecret: ""
  logs:
    debug: false

# The autoscaler is enabled by default
# Learn more: 
# https://docs.openfaas.com/architecture/autoscaling/
autoscaler:
  enabled: false

# A cluster role is required for OpenFaaS Pro due to:
# 1) Autoscaling and metrics for functions - CPU / RAM
# 2) Multiple namespace support
# https://docs.openfaas.com/reference/namespaces/
clusterRole: true

faasnetesPro:
  image: ttl.sh/alexellis2/faas-netes-pro:r2

# HPA CPU? 3 <=> 6
# If you have purchased licenses for 6 gateway replicas for this environment
# you can create a HPA rule to scale on CPU, but you must not scale beyond
# what's been purchased.
gateway:
  replicas: 1
  authProxyUrl: "https://auth.exit.o6s.io"

gatewayPro:
  image: ttl.sh/alexellis2/gateway:0.2.13-10-gc48b60ed

# Required gateway configuration for Istio
  # directFunctions: true
  # probeFunctions: true

# replicas x maxInflight = max concurrent messages processed.
# 75 concurrent requests will be processed, 25 per queueWorker
queueWorker:
  replicas: 0


openfaasImagePullPolicy: IfNotPresent
faasnetes:
  imagePullPolicy: IfNotPresent

queueWorkerPro:
  maxInflight: 1
  replicas: 0

# Enable JetStream for OpenFaaS, learn more at:
# https://www.openfaas.com/blog/jetstream-for-openfaas/
queueMode: jetstream

# Set stream replication factor.
# For production a value of at least 3 is recommended for NATS JetStream to be resilient.
# See https://github.com/openfaas/openfaas-pro/blob/master/jetstream.md
nats:
  streamReplication: 1

 # For timeouts longer than 60 seconds see:
 # https://docs.openfaas.com/tutorials/expanded-timeouts/

oidcAuthPlugin:
  enabled: false
  verbose: true # debug setting
  openidURL: "https://alexellis.eu.auth0.com/.well-known/openid-configuration"
  audience: https://alexellis.eu.auth0.com/api/v2/
  baseHost: "https://gw.exit.o6s.io"
  image: ttl.sh/alexellis/openfaas-oidc-plugin:0.5.5-10-g269b915-dirty

