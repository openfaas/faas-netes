functionNamespace: openfaas-fn  # Default namespace for functions

# See https://www.openfaas.com/support for more
openfaasPRO: false
exposeServices: true
async: true
serviceType: NodePort
httpProbe: true               # Setting to true will use HTTP for readiness and liveness probe on the OpenFaaS system Pods (incompatible with Istio < 1.1.5)
rbac: true
clusterRole: false            # Set to true to have OpenFaaS administrate multiple namespaces
createCRDs: true
basic_auth: true
generateBasicAuth: false

securityContext: true
# create pod security policies for OpenFaaS control plane
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
psp: false

# image pull policy for openfaas components, can change to `IfNotPresent` in offline env
openfaasImagePullPolicy: "Always"

# openfaasPRO components, which requires openfaasPRO=true
oidcAuthPlugin:
  enabled: false
  verbose: false # debug setting
  provider: "" # Leave blank, or put "azure"
  insecureTLS: false
  scopes: "openid profile email"
  openidURL: "https://example.eu.auth0.com/.well-known/openid-configuration"
  audience: https://example.eu.auth0.com/api/v2/
  welcomePageURL: https://gateway.openfaas.example.com
  cookieDomain: ".openfaas.example.com"
  baseHost: "https://auth.openfaas.example.com"
  clientSecret: ""
  clientID: ""
  resources:
    requests:
      memory: "120Mi"
      cpu: "50m"
  replicas: 1
  image: ghcr.io/openfaas/openfaas-oidc-plugin:0.5.1
  securityContext: true

# Requires openfaasPRO=true
# scale-to-zero feature
faasIdler:
  image: ghcr.io/openfaas/faas-idler-pro:0.4.3
  replicas: 1
  create: true
  inactivityDuration: 30m               # If a function is inactive for 15 minutes, it may be scaled to zero
  reconcileInterval: 2m                 # The interval between each attempt to scale functions to zero
  readOnly: true                        # When set to true, no functions are scaled to zero
  resources:
    requests:
      memory: "64Mi"

gateway:
  image: ghcr.io/openfaas/gateway:0.21.1
  readTimeout: "65s"
  writeTimeout: "65s"
  upstreamTimeout: "60s"  # Must be smaller than read/write_timeout
  replicas: 1
  scaleFromZero: true
  # change the port when creating multiple releases in the same baremetal cluster
  nodePort: 31112
  maxIdleConns: 1024
  maxIdleConnsPerHost: 1024
  directFunctions: false
  # Custom logs provider url. For example openfaas-loki would be
  # "http://ofloki-openfaas-loki.openfaas:9191/"
  logsProviderURL: ""
  resources:
    requests:
      memory: "120Mi"
      cpu: "50m"

basicAuthPlugin:
  image: ghcr.io/openfaas/basic-auth:0.21.1
  replicas: 1
  resources:
    requests:
      memory: "50Mi"
      cpu: "20m"

faasnetes:
  image: ghcr.io/openfaas/faas-netes:0.13.8
  readTimeout: "60s"
  writeTimeout: "60s"
  imagePullPolicy: "Always"    # Image pull policy for deployed functions
  httpProbe: true               # Setting to true will use HTTP for readiness and liveness probe on Pods (incompatible with Istio < 1.1.5)
  setNonRootUser: false
  readinessProbe:
    initialDelaySeconds: 2
    timeoutSeconds: 1           # Tuned-in to run checks early and quickly to support fast cold-start from zero replicas
    periodSeconds: 2            # Reduce to 1 for a faster cold-start, increase higher for lower-CPU usage
  livenessProbe:
    initialDelaySeconds: 2
    timeoutSeconds: 1
    periodSeconds: 2           # Reduce to 1 for a faster cold-start, increase higher for lower-CPU usage
  resources:
    requests:
      memory: "120Mi"
      cpu: "50m"

# replaces faas-netes with openfaas-operator
operator:
  image: ghcr.io/openfaas/faas-netes:0.13.5
  create: false
  # set this to false when creating multiple releases in the same cluster
  # must be true for the first one only
  createCRD: true
  resources:
    requests:
      memory: "120Mi"
      cpu: "50m"

# Requires openfaas PRO subscription
queueWorkerPro:
  image: ghcr.io/openfaas/queue-worker-pro:0.1.0-rc4
  enabled: false
  maxRetryAttempts: "10"
  maxRetryWait: "120s"
  initialRetryWait: "10s"
  httpRetryCodes: "429,502,500,504,408"

queueWorker:
  image: ghcr.io/openfaas/queue-worker:0.12.2
  # Control HA of queue-worker
  replicas: 1
  # Control the concurrent invocations
  maxInflight: 1
  gatewayInvoke: true
  queueGroup: "faas"
  ackWait: "60s"
  resources:
    requests:
      memory: "120Mi"
      cpu: "50m"

# monitoring and auto-scaling components
# both components
prometheus:
  image: prom/prometheus:v2.11.0
  create: true
  resources:
    requests:
      memory: "512Mi"
  annotations: {}

alertmanager:
  image: prom/alertmanager:v0.18.0
  create: true
  resources:
    requests:
      memory: "25Mi"
    limits:
      memory: "50Mi"

# async provider
nats:
  channel: "faas-request"
  external:
    clusterName: ""
    enabled: false
    host: ""
    port: ""
  image: nats-streaming:0.22.0
  enableMonitoring: false
  metrics:
    # Should stay off by default because the exporter is not multi-arch (yet)
    enabled: false
    image: natsio/prometheus-nats-exporter:0.8.0
  resources:
    requests:
      memory: "120Mi"

# ingress configuration
ingress:
  enabled: false
  ## For k8s >= 1.18 you need to specify the pathType
  ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
  #pathType: ImplementationSpecific

  # Used to create Ingress record (should be used with exposeServices: false).
  hosts:
    - host: gateway.openfaas.local  # Replace with gateway.example.com if public-facing
      serviceName: gateway
      servicePort: 8080
      path: /
  annotations:
    kubernetes.io/ingress.class: nginx
  tls:
  # Secrets must be manually created in the namespace.

# ingressOperator (optional) â€“ component to have specific FQDN and TLS for Functions
# https://github.com/openfaas-incubator/ingress-operator
ingressOperator:
  image: ghcr.io/openfaas/ingress-operator:0.6.7
  replicas: 1
  create: false
  resources:
    requests:
      memory: "25Mi"

nodeSelector: {}

tolerations: []

affinity: {}

kubernetesDNSDomain: cluster.local

istio:
  mtls: false

gatewayExternal:
  annotations: {}

k8sVersionOverride: "" #  Allow kubeVersion to be overridden for the ingress creation
